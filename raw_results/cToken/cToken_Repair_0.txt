-> % time python3 CLI.py --targetContractName cToken repair ../DeFi/SolVer/experiment/cToken/cToken.sol

[2022-05-30 02:07:03.714343] INFO: CLI: Start repairing problems
[2022-05-30 02:07:03.714910] INFO: CLI: ['1']
[2022-05-30 02:07:03.714969] INFO: CLI: True
[2022-05-30 02:07:03.715010] INFO: CR.py: in CR is reentrant is True
[2022-05-30 02:07:03.717961] INFO: CR.py: Executing REPAIR
[2022-05-30 02:07:03.718252] INFO: CR.py: Evaluating the population in CR
Path source is (PosixPath('/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol'),)
tcPath ../DeFi/SolVer/experiment/cToken
[2022-05-30 02:07:03.719300] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
[2022-05-30 02:07:03.720003] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpf1vli9m4/invalid_0_cToken.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and (PosixPath('/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol'),)
[2022-05-30 02:07:03.724742] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpf1vli9m4/valid_0_cToken.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and (PosixPath('/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol'),)
[2022-05-30 02:07:04.240905] INFO: SolVer.py: Results for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 are []
[2022-05-30 02:07:04.352875] INFO: SolVer.py: Results for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 are []
The test cases execution result for cToken.sol is [FailedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:04.353666] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:04.353868] INFO: CR.py: Calling fitnessFn_ProblemDection function
[2022-05-30 02:07:04.354146] INFO: CR.py: Initial subject contract has the following targeted vulnerabilities:
{'SolVer': [FailedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None)]}
[2022-05-30 02:07:04.354465] INFO: CR.py: Generated init fault space specifier: TYPE:cToken.borrowFresh-Block;
[2022-05-30 02:07:04.354677] INFO: SolidityM.py: Constructed base args for sm: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;']
[2022-05-30 02:07:04.354878] INFO: SolidityM.py: Start sm for space ('MovementM',) with args: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;', '--patched-src-dir=/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556', '--mutation_types', 'MovementM', '--must-include-mutation-types', 'MovementM']
[2022-05-30 02:07:04.361879] INFO: SolidityM.py: Start sm for space ('InsertionM',) with args: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;', '--patched-src-dir=/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k', '--mutation_types', 'InsertionM', '--must-include-mutation-types', 'InsertionM']
[2022-05-30 02:07:04.367486] INFO: SolidityM.py: Start sm for space ('ReplacementM',) with args: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;', '--patched-src-dir=/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpj0mazup3', '--mutation_types', 'ReplacementM', '--must-include-mutation-types', 'ReplacementM']
[2022-05-30 02:07:04.372929] INFO: SolidityM.py: Start sm for space ('MovementM', 'InsertionM') with args: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;', '--patched-src-dir=/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6', '--mutation_types', 'MovementM', 'InsertionM', '--must-include-mutation-types', 'MovementM', 'InsertionM']
[2022-05-30 02:07:04.378978] INFO: SolidityM.py: Start sm for space ('MovementM', 'ReplacementM') with args: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;', '--patched-src-dir=/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpz22igx5w', '--mutation_types', 'MovementM', 'ReplacementM', '--must-include-mutation-types', 'MovementM', 'ReplacementM']
[2022-05-30 02:07:04.385300] INFO: SolidityM.py: Start sm for space ('InsertionM', 'ReplacementM') with args: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;', '--patched-src-dir=/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpl233oal4', '--mutation_types', 'InsertionM', 'ReplacementM', '--must-include-mutation-types', 'InsertionM', 'ReplacementM']
[2022-05-30 02:07:04.398955] INFO: SolidityM.py: Start sm for space ('MovementM', 'InsertionM', 'ReplacementM') with args: ['/Users/hidden/DeFinery/sm/build/main/utils/bin.js', 'iter-gen-mutations', '--only-compilable=true', '/Users/hidden/DeFi/SolVer/experiment/cToken/cToken.sol', '--mutation-space=TYPE:cToken.borrowFresh-Block;', '--patched-src-dir=/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp646pijn7', '--mutation_types', 'MovementM', 'InsertionM', 'ReplacementM', '--must-include-mutation-types', 'MovementM', 'InsertionM', 'ReplacementM']
[2022-05-30 02:07:04.407499] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
2022-05-30T02:07:06.451Z info:     Using seed "lucky-seed" as type string
2022-05-30T02:07:06.455Z info:     Using seed "lucky-seed" as type string
2022-05-30T02:07:06.471Z info:     Using seed "lucky-seed" as type string
2022-05-30T02:07:06.477Z info:     Using seed "lucky-seed" as type string
2022-05-30T02:07:06.480Z info:     Using seed "lucky-seed" as type string
2022-05-30T02:07:06.507Z info:     Using seed "lucky-seed" as type string
2022-05-30T02:07:06.571Z info:     Using seed "lucky-seed" as type string
(node:95258) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:95258) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(node:95260) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:95260) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
2022-05-30T02:07:12.032Z info:     Patch search space exhausted.
(node:95262) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:95262) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
2022-05-30T02:07:12.064Z info:     Termination requested
(node:95259) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:95259) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
2022-05-30T02:07:12.083Z info:     Termination requested
(node:95264) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:95264) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
2022-05-30T02:07:12.094Z info:     Termination requested
(node:95263) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:95263) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
2022-05-30T02:07:12.154Z info:     Termination requested
(node:95261) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
(Use `node --trace-warnings ...` to show where the warning was created)
(node:95261) Warning: Accessing non-existent property 'INVALID_ALT_NUMBER' of module exports inside circular dependency
2022-05-30T02:07:12.162Z info:     Termination requested
2022-05-30T02:07:12.613Z info:     Generated 1 patches for current task
2022-05-30T02:07:12.709Z info:     Patched source file #0 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol
2022-05-30T02:07:12.711Z info:     Mutation sequence file #0 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol.mutation.json
[2022-05-30 02:07:12.784403] INFO: CR.py: Evaluating the population in CR
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol',)
[2022-05-30 02:07:12.785114] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
[2022-05-30 02:07:12.785837] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpk0ei59yv/invalid_0_0.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol',)
[2022-05-30 02:07:12.790458] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpk0ei59yv/valid_0_0.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol',)
The test cases execution result for 0.sol is [PassedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None, detected=False), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:13.172536] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:13.172784] INFO: CR.py: Calling fitnessFn_ProblemDection function
[2022-05-30 02:07:13.173551] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
2022-05-30T02:07:13.174Z info:     Patch search space exhausted.
2022-05-30T02:07:13.980Z info:     Generated 1 patches for current task
2022-05-30T02:07:14.159Z info:     Patched source file #1 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol
2022-05-30T02:07:14.166Z info:     Mutation sequence file #1 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol.mutation.json
2022-05-30T02:07:14.220Z info:     Termination requested
2022-05-30T02:07:14.221Z info:     Termination requested
2022-05-30T02:07:14.230Z info:     Generated 1 patches for current task
2022-05-30T02:07:14.231Z info:     Termination requested
2022-05-30T02:07:14.235Z info:     Termination requested
2022-05-30T02:07:14.269Z info:     Patched source file #0 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/0.sol
2022-05-30T02:07:14.269Z info:     Mutation sequence file #0 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/0.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/0.sol.mutation.json
[2022-05-30 02:07:14.311325] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:14.311634] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
[2022-05-30 02:07:14.311772] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:14.311946] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
2022-05-30T02:07:14.313Z info:     Patch search space exhausted.
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol',)
[2022-05-30 02:07:14.314353] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/0.sol',)
[2022-05-30 02:07:14.315421] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
[2022-05-30 02:07:14.317009] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpcpppb3gu/invalid_0_1.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol',)
[2022-05-30 02:07:14.324332] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpcpppb3gu/valid_0_1.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol',)
[2022-05-30 02:07:14.344518] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmplplki4cg/invalid_0_0.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/0.sol',)
[2022-05-30 02:07:14.355959] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmplplki4cg/valid_0_0.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/0.sol',)
2022-05-30T02:07:15.384Z info:     Generated 1 patches for current task
2022-05-30T02:07:15.507Z info:     Termination requested
2022-05-30T02:07:15.518Z info:     Generated 1 patches for current task
2022-05-30T02:07:15.520Z info:     Termination requested
2022-05-30T02:07:15.524Z info:     Termination requested
2022-05-30T02:07:15.551Z info:     Patched source file #1 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/1.sol
2022-05-30T02:07:15.552Z info:     Mutation sequence file #1 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/1.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/1.sol.mutation.json
2022-05-30T02:07:15.560Z info:     Termination requested
2022-05-30T02:07:15.586Z info:     Patched source file #2 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol
2022-05-30T02:07:15.592Z info:     Mutation sequence file #2 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol.mutation.json
The test cases execution result for 1.sol is [PassedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None, detected=False), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:15.662093] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:15.662302] INFO: CR.py: Calling fitnessFn_ProblemDection function
[2022-05-30 02:07:15.713683] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:15.714052] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
[2022-05-30 02:07:15.714202] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:15.714324] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
2022-05-30T02:07:15.714Z info:     Patch search space exhausted.
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol',)
[2022-05-30 02:07:15.715773] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/1.sol',)
[2022-05-30 02:07:15.716202] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
2022-05-30T02:07:15.717Z info:     Patch search space exhausted.
[2022-05-30 02:07:15.718472] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpz69oj2tb/invalid_0_2.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol',)
[2022-05-30 02:07:15.724293] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpz69oj2tb/valid_0_2.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol',)
[2022-05-30 02:07:15.730988] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpye33t6d3/invalid_0_1.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/1.sol',)
[2022-05-30 02:07:15.738934] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpye33t6d3/valid_0_1.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/1.sol',)
2022-05-30T02:07:15.757Z info:     Termination requested
The test cases execution result for 0.sol is [FailedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:15.974184] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:15.974615] INFO: CR.py: Calling fitnessFn_ProblemDection function
The test cases execution result for 2.sol is [PassedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None, detected=False), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:16.596676] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:16.597111] INFO: CR.py: Calling fitnessFn_ProblemDection function
2022-05-30T02:07:16.618Z info:     Generated 1 patches for current task
2022-05-30T02:07:16.619Z info:     Termination requested
2022-05-30T02:07:16.627Z info:     Termination requested
2022-05-30T02:07:16.645Z info:     Termination requested
2022-05-30T02:07:16.668Z info:     Patched source file #2 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/2.sol
2022-05-30T02:07:16.669Z info:     Mutation sequence file #2 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/2.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/2.sol.mutation.json
[2022-05-30 02:07:16.675347] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:16.675580] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
2022-05-30T02:07:16.676Z info:     Patch search space exhausted.
2022-05-30T02:07:16.676Z info:     Patch search space exhausted.
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/2.sol',)
[2022-05-30 02:07:16.676805] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
[2022-05-30 02:07:16.677772] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpd5dibbko/invalid_0_2.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/2.sol',)
[2022-05-30 02:07:16.685753] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpd5dibbko/valid_0_2.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/2.sol',)
The test cases execution result for 1.sol is [FailedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:17.292515] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:17.296112] INFO: CR.py: Calling fitnessFn_ProblemDection function
2022-05-30T02:07:17.423Z info:     Termination requested
2022-05-30T02:07:17.444Z info:     Generated 1 patches for current task
2022-05-30T02:07:17.451Z info:     Termination requested
2022-05-30T02:07:17.468Z info:     Termination requested
2022-05-30T02:07:17.469Z info:     Patched source file #3 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol
2022-05-30T02:07:17.472Z info:     Mutation sequence file #3 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol.mutation.json
2022-05-30T02:07:17.480Z info:     Termination requested
[2022-05-30 02:07:17.481342] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:17.481632] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
2022-05-30T02:07:17.482Z info:     Patch search space exhausted.
2022-05-30T02:07:17.482Z info:     Patch search space exhausted.
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol',)
[2022-05-30 02:07:17.482773] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
[2022-05-30 02:07:17.483838] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5z6m7qv6/invalid_0_3.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol',)
[2022-05-30 02:07:17.490200] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5z6m7qv6/valid_0_3.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol',)
2022-05-30T02:07:17.541Z info:     Termination requested
The test cases execution result for 2.sol is [FailedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:18.086676] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:18.087157] INFO: CR.py: Calling fitnessFn_ProblemDection function
2022-05-30T02:07:18.178Z info:     Generated 1 patches for current task
2022-05-30T02:07:18.199Z info:     Termination requested
2022-05-30T02:07:18.204Z info:     Generated 1 patches for current task
2022-05-30T02:07:18.228Z info:     Termination requested
2022-05-30T02:07:18.230Z info:     Patched source file #4 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/4.sol
2022-05-30T02:07:18.231Z info:     Mutation sequence file #4 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/4.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/4.sol.mutation.json
2022-05-30T02:07:18.277Z info:     Patched source file #0 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol
2022-05-30T02:07:18.280Z info:     Mutation sequence file #0 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol.mutation.json
The test cases execution result for 3.sol is [PassedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None, detected=False), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:18.299266] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:18.299444] INFO: CR.py: Calling fitnessFn_ProblemDection function
[2022-05-30 02:07:18.349698] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:18.349978] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
[2022-05-30 02:07:18.350145] INFO: CR.py: Evaluating the population in CR
[2022-05-30 02:07:18.350279] INFO: SolidityM.py: sm input: {'type': 'random', 'num_mutations': 1}
2022-05-30T02:07:18.351Z info:     Patch search space exhausted.
2022-05-30T02:07:18.351Z info:     Patch search space exhausted.
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/4.sol',)
[2022-05-30 02:07:18.352208] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
2022-05-30T02:07:18.352Z info:     Patch search space exhausted.
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol',)
[2022-05-30 02:07:18.352760] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
[2022-05-30 02:07:18.353852] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpndfs0p1w/invalid_0_4.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/4.sol',)
[2022-05-30 02:07:18.362694] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpndfs0p1w/valid_0_4.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/4.sol',)
[2022-05-30 02:07:18.369129] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmptrs_5guk/invalid_0_0.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol',)
[2022-05-30 02:07:18.376143] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmptrs_5guk/valid_0_0.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol',)
2022-05-30T02:07:18.983Z info:     Termination requested
2022-05-30T02:07:18.994Z info:     Generated 1 patches for current task
2022-05-30T02:07:18.995Z info:     Termination requested
2022-05-30T02:07:19.016Z info:     Patched source file #5 written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/5.sol
2022-05-30T02:07:19.017Z info:     Mutation sequence file #5 for /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/5.sol written to /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/5.sol.mutation.json
2022-05-30T02:07:19.068Z info:     Termination requested
[2022-05-30 02:07:19.070476] INFO: CR.py: Evaluating the population in CR
Path source is ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/5.sol',)
[2022-05-30 02:07:19.071652] INFO: SolVer.py: Start executing 2 test cases using SolVer with symbex
[2022-05-30 02:07:19.072849] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpmdwib8yb/invalid_0_5.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/5.sol',)
[2022-05-30 02:07:19.080748] INFO: SolVer.py: Args are ../DeFi/SolVer/build/solver/solver -symexe-check /var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpmdwib8yb/valid_0_5.sol cToken for /Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0 and ('/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/5.sol',)
The test cases execution result for 0.sol is [PassedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None, detected=False), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:19.329282] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:19.329553] INFO: CR.py: Calling fitnessFn_ProblemDection function
The test cases execution result for 4.sol is [FailedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:19.387730] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:19.387931] INFO: CR.py: Calling fitnessFn_ProblemDection function
The test cases execution result for 5.sol is [FailedInvalidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/invalid_0', additionalInfo=None), PassedValidCase(name='/Users/hidden/DeFinery/../DeFi/SolVer/experiment/cToken/valid_0', additionalInfo=None)]
[2022-05-30 02:07:19.792776] INFO: CR.py: Calculating the Fitness function values
[2022-05-30 02:07:19.793008] INFO: CR.py: Calling fitnessFn_ProblemDection function
[2022-05-30 02:07:19.793773] INFO: CR.py: Currently done evaluating generation 0
[2022-05-30 02:07:19.794056] INFO: CR.py:    	     	                                                                            	    	                                   vulnerabilities                                    
   	     	                                                                            	    	--------------------------------------------------------------------------------------
   	     	                               fitness values                               	    	                                 	                                              
   	     	----------------------------------------------------------------------------	    	                                 	                                              
gen	evals	min                                  	max                                 	op  	#targetedVuls                    	#targetedVuls(detailed)vuls-best-patch(max: 3)
0  	11   	{'hard': '(-1.0,)', 'soft': '(2.0,)'}	{'hard': '(0.0,)', 'soft': '(1.0,)'}	init	(0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1)	                                              
[2022-05-30 02:07:19.802116] INFO: CR.py: ParetoFront: 
{'fitness values': {'min': FitnessMultiMin_improved(Hard: (0.0,) Soft: (1.0,)), 'max': FitnessMultiMin_improved(Hard: (0.0,) Soft: (1.0,))}, 'vulnerabilities': {'vuls-best-patch(max: 3)': {}, '#targetedVuls': (0,)}}
[2022-05-30 02:07:19.802232] INFO: CR.py: Evaluated 10 patches
[2022-05-30 02:07:19.802453] INFO: CR.py:                   	     	                                                                            	    	                                   vulnerabilities                                    
                  	     	                                                                            	    	--------------------------------------------------------------------------------------
                  	     	                               fitness values                               	    	                                 	                                              
                  	     	----------------------------------------------------------------------------	    	                                 	                                              
gen               	evals	min                                  	max                                 	op  	#targetedVuls                    	#targetedVuls(detailed)vuls-best-patch(max: 3)
0                 	11   	{'hard': '(-1.0,)', 'soft': '(2.0,)'}	{'hard': '(0.0,)', 'soft': '(1.0,)'}	init	(0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1)	                                              
plausible-last-gen	5    	{'hard': '(0.0,)', 'soft': '(2.0,)'} 	{'hard': '(0.0,)', 'soft': '(1.0,)'}	init	(0, 0, 0, 0, 0)                  	                                              
[2022-05-30 02:07:19.810722] INFO: CR.py: Plausible patches details:
[Individual(MutationSequence=[{'ast': {'type': 'SourceUnit', 'children': [{'type': 'ContractDefinition', 'name': 'WETH', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'balanceOf', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': 'allowance', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': 'getBalanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'usr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'usr'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'deposit', 'parameters': [], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'value'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'payable'}, {'type': 'FunctionDefinition', 'name': 'withdraw', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, 'memberName': 'balance'}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'AMP', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': '_balances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': '_allowances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': '_totalSupply'}, 'right': {'type': 'NumberLiteral', 'number': '1000', 'subdenomination': None}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': '_totalSupply'}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'balanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_tokenHolder', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_tokenHolder'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'User'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}], 'names': []}, 'memberName': 'tokensReceived'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'crETH', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'crAmp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'minter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retMintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balancesEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'Identifier', 'name': 'mintAmount'}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRateMantissa', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}, {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'mintAmount'}], 'names': []}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintTokens', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'Identifier', 'name': 'mintAmount'}, 'right': {'type': 'Identifier', 'name': 'exchangeRateMantissa'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'totalSupply_crETH'}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'minter'}}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': 'mintAmount'}}]}, 'falseBody': None}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crAMP'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crAMP'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balanceEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamAMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crAmp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAMP'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'cToken', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'crEth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'exchangeRate'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crETH'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crETH'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balances', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'balanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [{'type': 'ModifierInvocation', 'name': 'noReentrancy', 'arguments': None}], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crETH'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'User', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'weth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'reenter', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_reenter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'Identifier', 'name': '_reenter'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAmp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAmp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crEth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'weth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'approveWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'spender', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': 'weth'}], 'names': []}, 'memberName': 'approve'}, 'arguments': [{'type': 'Identifier', 'name': 'spender'}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'mintFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crAMP_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'tokensReceived', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '==', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'falseBody': None}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}], 'comments': [{'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'noReentrancy()', 'raw': ' noReentrancy()'}, {'type': 'LineComment', 'value': 'exchangeRateStoredInternal();', 'raw': ' exchangeRateStoredInternal();'}, {'type': 'BlockComment', 'value': 'We write previously calculated values into storage', 'codeStart': 4028, 'raw': ' We write previously calculated values into storage ', 'code': {'context': {}, 'value': ''}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 4338, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have equal value', 'raw': ' Simplification, we assume that crAMP and crETH have equal value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'BlockComment', 'value': 'We write the previously calculated values into storage', 'codeStart': 5400, 'raw': ' We write the previously calculated values into storage ', 'code': {'value': '}'}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 6972, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have similar value', 'raw': ' Simplification, we assume that crAMP and crETH have similar value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'LineComment', 'value': 'These are safe, as the underflow condition is checked first', 'raw': ' These are safe, as the underflow condition is checked first'}]}, 'mutationType': 'MovementM', 'fromNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements', '0'], 'toPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements'], 'insertIndex': 21}], PatchedFilePath='/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol', ModifiedLocations=[{'start': {'line': 272, 'column': 12}, 'end': {'line': 272, 'column': 67}}, {'start': {'line': 246, 'column': 33}, 'end': {'line': 278, 'column': 4}}]), Individual(MutationSequence=[{'ast': {'type': 'SourceUnit', 'children': [{'type': 'ContractDefinition', 'name': 'WETH', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'balanceOf', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': 'allowance', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': 'getBalanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'usr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'usr'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'deposit', 'parameters': [], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'value'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'payable'}, {'type': 'FunctionDefinition', 'name': 'withdraw', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, 'memberName': 'balance'}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'AMP', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': '_balances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': '_allowances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': '_totalSupply'}, 'right': {'type': 'NumberLiteral', 'number': '1000', 'subdenomination': None}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': '_totalSupply'}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'balanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_tokenHolder', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_tokenHolder'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'User'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}], 'names': []}, 'memberName': 'tokensReceived'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'crETH', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'crAmp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'minter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retMintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balancesEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'Identifier', 'name': 'mintAmount'}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRateMantissa', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}, {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'mintAmount'}], 'names': []}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintTokens', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'Identifier', 'name': 'mintAmount'}, 'right': {'type': 'Identifier', 'name': 'exchangeRateMantissa'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'totalSupply_crETH'}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'minter'}}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': 'mintAmount'}}]}, 'falseBody': None}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crAMP'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crAMP'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balanceEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamAMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crAmp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAMP'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'cToken', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'crEth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'exchangeRate'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crETH'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crETH'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balances', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'balanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [{'type': 'ModifierInvocation', 'name': 'noReentrancy', 'arguments': None}], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crETH'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'User', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'weth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'reenter', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_reenter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'Identifier', 'name': '_reenter'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAmp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAmp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crEth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'weth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'approveWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'spender', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': 'weth'}], 'names': []}, 'memberName': 'approve'}, 'arguments': [{'type': 'Identifier', 'name': 'spender'}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'mintFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crAMP_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'tokensReceived', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '==', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'falseBody': None}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}], 'comments': [{'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'noReentrancy()', 'raw': ' noReentrancy()'}, {'type': 'LineComment', 'value': 'exchangeRateStoredInternal();', 'raw': ' exchangeRateStoredInternal();'}, {'type': 'BlockComment', 'value': 'We write previously calculated values into storage', 'codeStart': 4028, 'raw': ' We write previously calculated values into storage ', 'code': {'context': {}, 'value': ''}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 4338, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have equal value', 'raw': ' Simplification, we assume that crAMP and crETH have equal value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'BlockComment', 'value': 'We write the previously calculated values into storage', 'codeStart': 5400, 'raw': ' We write the previously calculated values into storage ', 'code': {'value': '}'}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 6972, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have similar value', 'raw': ' Simplification, we assume that crAMP and crETH have similar value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'LineComment', 'value': 'These are safe, as the underflow condition is checked first', 'raw': ' These are safe, as the underflow condition is checked first'}]}, 'mutationType': 'MovementM', 'fromNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements', '0'], 'toPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements'], 'insertIndex': 21}, {'ast': {'type': 'SourceUnit', 'children': [{'type': 'ContractDefinition', 'name': 'WETH', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'balanceOf', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': 'allowance', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': 'getBalanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'usr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'usr'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'deposit', 'parameters': [], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'value'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'payable'}, {'type': 'FunctionDefinition', 'name': 'withdraw', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, 'memberName': 'balance'}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'AMP', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': '_balances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': '_allowances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': '_totalSupply'}, 'right': {'type': 'NumberLiteral', 'number': '1000', 'subdenomination': None}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': '_totalSupply'}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'balanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_tokenHolder', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_tokenHolder'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'User'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}], 'names': []}, 'memberName': 'tokensReceived'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'crETH', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'crAmp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'minter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retMintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balancesEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'Identifier', 'name': 'mintAmount'}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRateMantissa', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}, {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'mintAmount'}], 'names': []}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintTokens', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'Identifier', 'name': 'mintAmount'}, 'right': {'type': 'Identifier', 'name': 'exchangeRateMantissa'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'totalSupply_crETH'}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'minter'}}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': 'mintAmount'}}]}, 'falseBody': None}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crAMP'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crAMP'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balanceEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamAMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crAmp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAMP'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'cToken', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'crEth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'exchangeRate'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crETH'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crETH'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balances', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'balanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}]}, 'visibility': 'external', 'modifiers': [{'type': 'ModifierInvocation', 'name': 'noReentrancy', 'arguments': None}], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crETH'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'User', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'weth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'reenter', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_reenter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'Identifier', 'name': '_reenter'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAmp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAmp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crEth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'weth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'approveWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'spender', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': 'weth'}], 'names': []}, 'memberName': 'approve'}, 'arguments': [{'type': 'Identifier', 'name': 'spender'}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'mintFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crAMP_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'tokensReceived', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '==', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'falseBody': None}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}], 'comments': [{'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'noReentrancy()', 'raw': ' noReentrancy()'}, {'type': 'LineComment', 'value': 'exchangeRateStoredInternal();', 'raw': ' exchangeRateStoredInternal();'}, {'type': 'BlockComment', 'value': 'We write previously calculated values into storage', 'codeStart': 4028, 'raw': ' We write previously calculated values into storage ', 'code': {'context': {}, 'value': ''}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 4338, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have equal value', 'raw': ' Simplification, we assume that crAMP and crETH have equal value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'BlockComment', 'value': 'We write the previously calculated values into storage', 'codeStart': 5400, 'raw': ' We write the previously calculated values into storage ', 'code': {'value': '}'}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 6972, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have similar value', 'raw': ' Simplification, we assume that crAMP and crETH have similar value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'LineComment', 'value': 'These are safe, as the underflow condition is checked first', 'raw': ' These are safe, as the underflow condition is checked first'}]}, 'mutationType': 'MovementM', 'fromNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '21'], 'toPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements'], 'insertIndex': 1}], PatchedFilePath='/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol', ModifiedLocations=[{'start': {'line': 272, 'column': 12}, 'end': {'line': 272, 'column': 67}}, {'start': {'line': 246, 'column': 33}, 'end': {'line': 278, 'column': 4}}, {'start': {'line': 271, 'column': 78}, 'end': {'line': 275, 'column': 8}}]), Individual(MutationSequence=[{'ast': {'type': 'SourceUnit', 'children': [{'type': 'ContractDefinition', 'name': 'WETH', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'balanceOf', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': 'allowance', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': 'getBalanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'usr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'usr'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'deposit', 'parameters': [], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'value'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'payable'}, {'type': 'FunctionDefinition', 'name': 'withdraw', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, 'memberName': 'balance'}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'AMP', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': '_balances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': '_allowances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': '_totalSupply'}, 'right': {'type': 'NumberLiteral', 'number': '1000', 'subdenomination': None}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': '_totalSupply'}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'balanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_tokenHolder', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_tokenHolder'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'User'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}], 'names': []}, 'memberName': 'tokensReceived'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'crETH', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'crAmp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'minter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retMintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balancesEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'Identifier', 'name': 'mintAmount'}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRateMantissa', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}, {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'mintAmount'}], 'names': []}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintTokens', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'Identifier', 'name': 'mintAmount'}, 'right': {'type': 'Identifier', 'name': 'exchangeRateMantissa'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'totalSupply_crETH'}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'minter'}}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': 'mintAmount'}}]}, 'falseBody': None}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crAMP'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crAMP'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balanceEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamAMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crAmp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAMP'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'cToken', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'crEth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'exchangeRate'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crETH'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crETH'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balances', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'balanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [{'type': 'ModifierInvocation', 'name': 'noReentrancy', 'arguments': None}], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crETH'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'User', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'weth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'reenter', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_reenter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'Identifier', 'name': '_reenter'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAmp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAmp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crEth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'weth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'approveWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'spender', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': 'weth'}], 'names': []}, 'memberName': 'approve'}, 'arguments': [{'type': 'Identifier', 'name': 'spender'}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'mintFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crAMP_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'tokensReceived', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '==', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'falseBody': None}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}], 'comments': [{'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'noReentrancy()', 'raw': ' noReentrancy()'}, {'type': 'LineComment', 'value': 'exchangeRateStoredInternal();', 'raw': ' exchangeRateStoredInternal();'}, {'type': 'BlockComment', 'value': 'We write previously calculated values into storage', 'codeStart': 4028, 'raw': ' We write previously calculated values into storage ', 'code': {'context': {}, 'value': ''}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 4338, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have equal value', 'raw': ' Simplification, we assume that crAMP and crETH have equal value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'BlockComment', 'value': 'We write the previously calculated values into storage', 'codeStart': 5400, 'raw': ' We write the previously calculated values into storage ', 'code': {'value': '}'}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 6972, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have similar value', 'raw': ' Simplification, we assume that crAMP and crETH have similar value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'LineComment', 'value': 'These are safe, as the underflow condition is checked first', 'raw': ' These are safe, as the underflow condition is checked first'}]}, 'mutationType': 'MovementM', 'fromNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements', '0'], 'toPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements'], 'insertIndex': 21}, {'ast': {'type': 'SourceUnit', 'children': [{'type': 'ContractDefinition', 'name': 'WETH', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'balanceOf', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': 'allowance', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': 'getBalanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'usr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'usr'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'deposit', 'parameters': [], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'value'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'payable'}, {'type': 'FunctionDefinition', 'name': 'withdraw', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, 'memberName': 'balance'}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'AMP', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': '_balances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': '_allowances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': '_totalSupply'}, 'right': {'type': 'NumberLiteral', 'number': '1000', 'subdenomination': None}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': '_totalSupply'}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'balanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_tokenHolder', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_tokenHolder'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'User'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}], 'names': []}, 'memberName': 'tokensReceived'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'crETH', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'crAmp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'minter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retMintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balancesEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'Identifier', 'name': 'mintAmount'}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRateMantissa', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}, {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'mintAmount'}], 'names': []}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintTokens', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'Identifier', 'name': 'mintAmount'}, 'right': {'type': 'Identifier', 'name': 'exchangeRateMantissa'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'totalSupply_crETH'}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'minter'}}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': 'mintAmount'}}]}, 'falseBody': None}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crAMP'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crAMP'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balanceEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamAMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crAmp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAMP'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'cToken', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'crEth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'exchangeRate'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crETH'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crETH'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balances', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'balanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}]}, 'visibility': 'external', 'modifiers': [{'type': 'ModifierInvocation', 'name': 'noReentrancy', 'arguments': None}], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crETH'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'User', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'weth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'reenter', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_reenter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'Identifier', 'name': '_reenter'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAmp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAmp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crEth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'weth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'approveWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'spender', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': 'weth'}], 'names': []}, 'memberName': 'approve'}, 'arguments': [{'type': 'Identifier', 'name': 'spender'}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'mintFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crAMP_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'tokensReceived', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '==', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'falseBody': None}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}], 'comments': [{'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'noReentrancy()', 'raw': ' noReentrancy()'}, {'type': 'LineComment', 'value': 'exchangeRateStoredInternal();', 'raw': ' exchangeRateStoredInternal();'}, {'type': 'BlockComment', 'value': 'We write previously calculated values into storage', 'codeStart': 4028, 'raw': ' We write previously calculated values into storage ', 'code': {'context': {}, 'value': ''}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 4338, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have equal value', 'raw': ' Simplification, we assume that crAMP and crETH have equal value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'BlockComment', 'value': 'We write the previously calculated values into storage', 'codeStart': 5400, 'raw': ' We write the previously calculated values into storage ', 'code': {'value': '}'}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 6972, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have similar value', 'raw': ' Simplification, we assume that crAMP and crETH have similar value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'LineComment', 'value': 'These are safe, as the underflow condition is checked first', 'raw': ' These are safe, as the underflow condition is checked first'}]}, 'mutationType': 'MovementM', 'fromNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '21'], 'toPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'falseBody', 'statements'], 'insertIndex': 0}], PatchedFilePath='/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol', ModifiedLocations=[{'start': {'line': 272, 'column': 12}, 'end': {'line': 272, 'column': 67}}, {'start': {'line': 246, 'column': 33}, 'end': {'line': 278, 'column': 4}}, {'start': {'line': 275, 'column': 15}, 'end': {'line': 277, 'column': 8}}]), Individual(MutationSequence=[{'targetNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody'], 'targetPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements'], 'insertIndex': 2, 'newNode': {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'Identifier', 'name': 'locked'}], 'names': []}}, 'mutationType': 'InsertionM'}, {'targetNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody'], 'targetPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements'], 'insertIndex': 0, 'newNode': {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'left': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'operator': '!='}], 'names': []}}, 'mutationType': 'InsertionM'}], PatchedFilePath='/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol', ModifiedLocations=[{'start': {'line': 271, 'column': 78}, 'end': {'line': 275, 'column': 8}}]), Individual(MutationSequence=[{'targetNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody'], 'targetPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements'], 'insertIndex': 0, 'newNode': {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'Identifier', 'name': 'locked'}], 'names': []}}, 'mutationType': 'InsertionM'}, {'ast': {'type': 'SourceUnit', 'children': [{'type': 'ContractDefinition', 'name': 'WETH', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'balanceOf', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': 'allowance', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': 'getBalanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'usr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'usr'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'deposit', 'parameters': [], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'value'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'payable'}, {'type': 'FunctionDefinition', 'name': 'withdraw', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, 'memberName': 'balance'}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'allowance'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'balanceOf'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'AMP', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': '_balances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}}, 'name': '_allowances', 'expression': None, 'visibility': 'public', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': '_totalSupply'}, 'right': {'type': 'NumberLiteral', 'number': '1000', 'subdenomination': None}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'totalSupply', 'parameters': [], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tS', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': '_totalSupply'}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'balanceOf', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_tokenHolder', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_tokenHolder'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'approve', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'guy', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'appr', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'index': {'type': 'Identifier', 'name': 'guy'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transfer', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'transferFrom'}, 'arguments': [{'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}, {'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'transferFrom', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'src', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'dst', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'wad', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'success', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'Identifier', 'name': 'src'}, 'right': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'BinaryOperation', 'operator': '!=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'NumberLiteral', 'number': '99999999', 'subdenomination': None}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_allowances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'index': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'msg'}, 'memberName': 'sender'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}]}, 'falseBody': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '-=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'src'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': 'dst'}}, 'right': {'type': 'Identifier', 'name': 'wad'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'User'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}], 'names': []}, 'memberName': 'tokensReceived'}, 'arguments': [{'type': 'Identifier', 'name': 'dst'}, {'type': 'Identifier', 'name': 'wad'}], 'names': []}}, {'type': 'ReturnStatement', 'expression': {'type': 'BooleanLiteral', 'value': True}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': '_balances'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'crETH', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens_crETH', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'crAmp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'minter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retMintAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balancesEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balancesEth'}, 'right': {'type': 'Identifier', 'name': 'mintAmount'}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRateMantissa', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'Identifier', 'name': 'minter'}, {'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'mintAmount'}], 'names': []}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'mintTokens', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'Identifier', 'name': 'mintAmount'}, 'right': {'type': 'Identifier', 'name': 'exchangeRateMantissa'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'totalSupply_crETH'}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'minter'}}, 'right': {'type': 'Identifier', 'name': 'mintTokens'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'Identifier', 'name': 'mintAmount'}}]}, 'falseBody': None}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crAMP'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crAMP'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crAmp'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crAMP'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balanceEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'getBalanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balanceEth'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens_crETH'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamAMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAMP', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crAmp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAMP'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'cToken', 'baseContracts': [], 'subNodes': [{'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'totalSupply', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'accountTokens', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'Mapping', 'keyType': {'type': 'ElementaryTypeName', 'name': 'address'}, 'valueType': {'type': 'ElementaryTypeName', 'name': 'uint256'}}, 'name': 'borrowBalance', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'bool'}, 'name': 'locked', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'AMP'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'crEth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ModifierDefinition', 'name': 'noReentrancy', 'parameters': [], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'UnaryOperation', 'operator': '!', 'subExpression': {'type': 'Identifier', 'name': 'locked'}, 'isPrefix': True}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': True}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'Identifier', 'name': '_'}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'locked'}, 'right': {'type': 'BooleanLiteral', 'value': False}}}]}}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_amp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'AMP'}, 'arguments': [{'type': 'Identifier', 'name': '_amp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'setBalances', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': '_user'}}, 'right': {'type': 'Identifier', 'name': 'amount'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'getBorrowBalance', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_user', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balance', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': '_user'}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': 'view'}, {'type': 'FunctionDefinition', 'name': 'borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrowAmount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'retBorrow', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'allowed', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'collateralFactor', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'NumberLiteral', 'number': '75', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'exchangeRate', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'exchangeRate'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'oraclePrice', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokensToDenom', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'collateralFactor'}, 'right': {'type': 'Identifier', 'name': 'exchangeRate'}}, 'right': {'type': 'Identifier', 'name': 'oraclePrice'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'tokens_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'tokens_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBalances'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumCollateral', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'Identifier', 'name': 'tokens_crETH'}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'BinaryOperation', 'operator': '/', 'left': {'type': 'TupleExpression', 'components': [{'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'tokensToDenom'}, 'right': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'accountTokens'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}], 'isArray': False}, 'right': {'type': 'NumberLiteral', 'number': '100', 'subdenomination': None}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'sumBorrowPlusEffects', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'borrows_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'borrows_crETH'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'crEth'}, 'memberName': 'getBorrowBalance'}, 'arguments': [{'type': 'Identifier', 'name': 'borrower'}], 'names': []}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'Identifier', 'name': 'borrows_crETH'}}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}, 'right': {'type': 'BinaryOperation', 'operator': '*', 'left': {'type': 'Identifier', 'name': 'oraclePrice'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}}, {'type': 'VariableDeclarationStatement', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'balances', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'balanceOf'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}], 'names': []}}}, {'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '&&', 'left': {'type': 'BinaryOperation', 'operator': '>', 'left': {'type': 'Identifier', 'name': 'sumCollateral'}, 'right': {'type': 'Identifier', 'name': 'sumBorrowPlusEffects'}}, 'right': {'type': 'BinaryOperation', 'operator': '>=', 'left': {'type': 'Identifier', 'name': 'balances'}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'require'}, 'arguments': [{'type': 'Identifier', 'name': 'locked'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'transferFrom'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'borrower'}, {'type': 'Identifier', 'name': 'borrowAmount'}], 'names': []}}, {'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '+=', 'left': {'type': 'IndexAccess', 'base': {'type': 'Identifier', 'name': 'borrowBalance'}, 'index': {'type': 'Identifier', 'name': 'borrower'}}, 'right': {'type': 'Identifier', 'name': 'borrowAmount'}}}, {'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '0', 'subdenomination': None}}]}, 'falseBody': {'type': 'Block', 'statements': [{'type': 'ReturnStatement', 'expression': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}]}}]}, 'visibility': 'external', 'modifiers': [{'type': 'ModifierInvocation', 'name': 'noReentrancy', 'arguments': None}], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCreamETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crETH', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'crEth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crETH'}], 'names': []}}}]}, 'visibility': 'external', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}, {'type': 'ContractDefinition', 'name': 'User', 'baseContracts': [], 'subNodes': [{'type': 'FunctionDefinition', 'name': 'declare_path', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'int256'}, 'name': 'path', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'string'}, 'name': 'func', 'storageLocation': 'memory', 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': []}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'cToken'}, 'name': 'amp', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'crETH'}, 'name': 'eth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'UserDefinedTypeName', 'namePath': 'WETH'}, 'name': 'weth', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'StateVariableDeclaration', 'variables': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'reenter', 'expression': None, 'visibility': 'default', 'isStateVar': True, 'isDeclaredConst': False, 'isIndexed': False}], 'initialValue': None}, {'type': 'FunctionDefinition', 'name': None, 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': '_reenter', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'Identifier', 'name': '_reenter'}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': True, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_AMP', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crAmp', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'amp'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'cToken'}, 'arguments': [{'type': 'Identifier', 'name': '_crAmp'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setCream_ETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_crEth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'eth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'crETH'}, 'arguments': [{'type': 'Identifier', 'name': '_crEth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'setWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': '_weth', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'BinaryOperation', 'operator': '=', 'left': {'type': 'Identifier', 'name': 'weth'}, 'right': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': '_weth'}], 'names': []}}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'approveWETH', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'spender', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'Identifier', 'name': 'WETH'}, 'arguments': [{'type': 'Identifier', 'name': 'weth'}], 'names': []}, 'memberName': 'approve'}, 'arguments': [{'type': 'Identifier', 'name': 'spender'}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_mintFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'mintFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crAMP_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'amp'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'crETH_borrowFresh', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}, {'type': 'FunctionDefinition', 'name': 'tokensReceived', 'parameters': [{'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}, 'name': 'borrower', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}, {'type': 'VariableDeclaration', 'typeName': {'type': 'ElementaryTypeName', 'name': 'uint256'}, 'name': 'amount', 'storageLocation': None, 'isStateVar': False, 'isIndexed': False}], 'returnParameters': None, 'body': {'type': 'Block', 'statements': [{'type': 'IfStatement', 'condition': {'type': 'BinaryOperation', 'operator': '==', 'left': {'type': 'Identifier', 'name': 'reenter'}, 'right': {'type': 'NumberLiteral', 'number': '1', 'subdenomination': None}}, 'trueBody': {'type': 'Block', 'statements': [{'type': 'ExpressionStatement', 'expression': {'type': 'FunctionCall', 'expression': {'type': 'MemberAccess', 'expression': {'type': 'Identifier', 'name': 'eth'}, 'memberName': 'borrowFresh'}, 'arguments': [{'type': 'FunctionCall', 'expression': {'type': 'ElementaryTypeNameExpression', 'typeName': {'type': 'ElementaryTypeName', 'name': 'address'}}, 'arguments': [{'type': 'Identifier', 'name': 'this'}], 'names': []}, {'type': 'Identifier', 'name': 'amount'}], 'names': []}}]}, 'falseBody': None}]}, 'visibility': 'public', 'modifiers': [], 'isConstructor': False, 'stateMutability': None}], 'kind': 'contract'}], 'comments': [{'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'override', 'raw': ' override'}, {'type': 'LineComment', 'value': 'noReentrancy()', 'raw': ' noReentrancy()'}, {'type': 'LineComment', 'value': 'exchangeRateStoredInternal();', 'raw': ' exchangeRateStoredInternal();'}, {'type': 'BlockComment', 'value': 'We write previously calculated values into storage', 'codeStart': 4028, 'raw': ' We write previously calculated values into storage ', 'code': {'context': {}, 'value': ''}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 4338, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have equal value', 'raw': ' Simplification, we assume that crAMP and crETH have equal value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'BlockComment', 'value': 'We write the previously calculated values into storage', 'codeStart': 5400, 'raw': ' We write the previously calculated values into storage ', 'code': {'value': '}'}}, {'type': 'BlockComment', 'value': 'Fail if borrow not allowed', 'codeStart': 6972, 'raw': ' Fail if borrow not allowed ', 'code': {'context': {}, 'value': ''}}, {'type': 'LineComment', 'value': 'Simplification, we assume that crAMP and crETH have similar value', 'raw': ' Simplification, we assume that crAMP and crETH have similar value'}, {'type': 'LineComment', 'value': '+ sumCollateral', 'raw': ' + sumCollateral'}, {'type': 'LineComment', 'value': 'These are safe, as the underflow condition is checked first', 'raw': ' These are safe, as the underflow condition is checked first'}]}, 'mutationType': 'MovementM', 'fromNodePath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements', '1'], 'toPropertyPath': ['children', '3', 'subNodes', '12', 'body', 'statements', '20', 'trueBody', 'statements'], 'insertIndex': 3}], PatchedFilePath='/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol', ModifiedLocations=[{'start': {'line': 271, 'column': 78}, 'end': {'line': 275, 'column': 8}}, {'start': {'line': 272, 'column': 12}, 'end': {'line': 272, 'column': 67}}])]
[2022-05-30 02:07:19.817926] INFO: CR.py: Evaluated 10 patches
Testing equivalence... 0
Testing equivalence... 1
The valid implementation is EQUIVALENT: ../DeFi/SolVer/experiment/cToken/patched/patched_1.sol
Testing equivalence... 2
Testing equivalence... 3
Testing equivalence... 4
The valid implementation is EQUIVALENT: ../DeFi/SolVer/experiment/cToken/patched/patched_4.sol
[2022-05-30 02:07:22.385505] INFO: CR.py: Terminating...
Source files after applying plausible patches are in:
/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/0.sol
/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/1.sol
/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpbx66t556/2.sol
/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmp5ye9pd2k/3.sol
/var/folders/z_/6bhzyn8x0nggbqbs5pty3s4h0000gp/T/tmpnb8so7x6/0.sol
python3 CLI.py --targetContractName cToken repair   104.79s user 3.41s system 566% cpu 19.101 total